'use client'

import { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from 'recharts'

interface VulnerabilityChartProps {
  data: any
  loading: boolean
}

export function VulnerabilityChart({ data, loading }: VulnerabilityChartProps) {
  if (loading) {
    return (
      <div className="h-64 flex items-center justify-center">
        <div className="loading-spinner w-8 h-8" />
      </div>
    )
  }

  if (!data?.by_severity) {
    return (
      <div className="h-64 flex items-center justify-center">
        <p className="text-dark-400">Sem dados de vulnerabilidades</p>
      </div>
    )
  }

  const severityData = Object.entries(data.by_severity).map(([severity, count]) => ({
    name: severity.charAt(0).toUpperCase() + severity.slice(1),
    value: count as number,
    severity
  }))

  const COLORS = {
    critical: '#dc2626',
    high: '#ea580c',
    medium: '#d97706',
    low: '#65a30d',
    info: '#0369a1'
  }

  const CustomTooltip = ({ active, payload }: any) => {
    if (active && payload && payload.length) {
      const data = payload[0]
      return (
        <div className="bg-dark-800 border border-dark-700 rounded-lg p-3 shadow-lg">
          <p className="text-white font-medium">{data.payload.name}</p>
          <p className="text-dark-300">
            <span className="font-medium">{data.value}</span> vulnerabilidades
          </p>
        </div>
      )
    }
    return null
  }

  const CustomLegend = ({ payload }: any) => (
    <ul className="flex flex-wrap justify-center gap-4 mt-4">
      {payload.map((entry: any, index: number) => (
        <li key={index} className="flex items-center">
          <span 
            className="w-3 h-3 rounded-full mr-2" 
            style={{ backgroundColor: entry.color }}
          />
          <span className="text-sm text-dark-300">{entry.value}</span>
        </li>
      ))}
    </ul>
  )

  if (severityData.every(item => item.value === 0)) {
    return (
      <div className="h-64 flex items-center justify-center">
        <p className="text-dark-400">Nenhuma vulnerabilidade encontrada</p>
      </div>
    )
  }

  return (
    <div className="h-64">
      <ResponsiveContainer width="100%" height="100%">
        <PieChart>
          <Pie
            data={severityData}
            cx="50%"
            cy="45%"
            outerRadius={60}
            fill="#8884d8"
            dataKey="value"
            label={({ value }) => value > 0 ? value : ''}
            labelLine={false}
          >
            {severityData.map((entry, index) => (
              <Cell 
                key={`cell-${index}`} 
                fill={COLORS[entry.severity as keyof typeof COLORS] || '#64748b'} 
              />
            ))}
          </Pie>
          <Tooltip content={<CustomTooltip />} />
          <Legend content={<CustomLegend />} />
        </PieChart>
      </ResponsiveContainer>
    </div>
  )
}