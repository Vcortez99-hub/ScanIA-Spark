version: '3.8'

services:
  # Frontend Development Server
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
      target: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    depends_on:
      - backend
    networks:
      - scania-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
      target: development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - scanner_data:/app/scanner_data
    environment:
      - DATABASE_URL=postgresql://scania_user:scania_pass@postgres:5432/scania_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - JWT_SECRET_KEY=dev-jwt-secret-key-change-in-production
      - OWASP_ZAP_API_KEY=development-zap-key
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      - postgres
      - redis
    networks:
      - scania-network

  # Scanner Engine
  scanner:
    build:
      context: ./scanner
      dockerfile: ../docker/Dockerfile.scanner
    volumes:
      - scanner_data:/app/data
      - ./scanner:/app
    environment:
      - DATABASE_URL=postgresql://scania_user:scania_pass@postgres:5432/scania_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - OWASP_ZAP_HOST=owasp-zap
      - OWASP_ZAP_API_KEY=development-zap-key
    depends_on:
      - postgres
      - redis
      - owasp-zap
    networks:
      - scania-network

  # OWASP ZAP Scanner
  owasp-zap:
    image: owasp/zap2docker-stable:latest
    command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -config api.key=development-zap-key
    ports:
      - "8080:8080"
    volumes:
      - zap_data:/zap/wrk
    networks:
      - scania-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=scania_user
      - POSTGRES_PASSWORD=scania_pass
      - POSTGRES_DB=scania_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - scania-network

  # Redis Cache/Queue
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    networks:
      - scania-network

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
      target: development
    command: celery -A app.core.celery_app worker --loglevel=info
    volumes:
      - ./backend:/app
      - scanner_data:/app/scanner_data
    environment:
      - DATABASE_URL=postgresql://scania_user:scania_pass@postgres:5432/scania_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    networks:
      - scania-network

  # MinIO File Storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9002:9000"
      - "9003:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio_data:/data
    networks:
      - scania-network

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - scania-network

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - scania-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  scanner_data:
  zap_data:
  prometheus_data:
  grafana_data:

networks:
  scania-network:
    driver: bridge