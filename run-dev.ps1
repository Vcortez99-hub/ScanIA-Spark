# Script para executar ScanIA em ambiente de desenvolvimento
Write-Host "üöÄ Iniciando ScanIA - Sistema Inteligente de An√°lise de Cyberseguran√ßa" -ForegroundColor Cyan
Write-Host ""

# Verificar se o Docker est√° rodando
Write-Host "üìã Verificando pr√©-requisitos..." -ForegroundColor Yellow

try {
    docker --version | Out-Null
    Write-Host "‚úÖ Docker encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n√£o encontrado. Por favor, instale o Docker Desktop." -ForegroundColor Red
    exit 1
}

try {
    docker-compose --version | Out-Null
    Write-Host "‚úÖ Docker Compose encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose n√£o encontrado. Por favor, instale o Docker Compose." -ForegroundColor Red
    exit 1
}

# Verificar se Node.js est√° instalado
try {
    node --version | Out-Null
    Write-Host "‚úÖ Node.js encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n√£o encontrado. Por favor, instale o Node.js 18+." -ForegroundColor Red
    exit 1
}

# Verificar se Python est√° instalado
try {
    python --version | Out-Null
    Write-Host "‚úÖ Python encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python n√£o encontrado. Por favor, instale o Python 3.9+." -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üê≥ Iniciando servi√ßos com Docker Compose..." -ForegroundColor Yellow

# Iniciar servi√ßos de banco de dados e cache
docker-compose up -d postgres redis minio

Write-Host ""
Write-Host "‚è≥ Aguardando servi√ßos ficarem prontos..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# Instalar depend√™ncias do backend se necess√°rio
Write-Host "üì¶ Instalando depend√™ncias do backend..." -ForegroundColor Yellow
Set-Location backend
if (!(Test-Path "venv")) {
    python -m venv venv
    Write-Host "‚úÖ Virtual environment criado" -ForegroundColor Green
}

# Ativar virtual environment
Write-Host "üîß Ativando virtual environment..." -ForegroundColor Yellow
& ".\venv\Scripts\Activate.ps1"

# Instalar depend√™ncias
pip install -r requirements.txt

Write-Host ""
Write-Host "üì¶ Instalando depend√™ncias do frontend..." -ForegroundColor Yellow
Set-Location ../frontend
npm install

Set-Location ..

Write-Host ""
Write-Host "üöÄ Aplica√ß√£o ScanIA est√° pronta!" -ForegroundColor Green
Write-Host ""
Write-Host "üìç URLs de acesso:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend: http://localhost:3000" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend API: http://localhost:8000" -ForegroundColor White
Write-Host "   ‚Ä¢ API Docs: http://localhost:8000/docs" -ForegroundColor White
Write-Host "   ‚Ä¢ Banco de Dados: localhost:5432" -ForegroundColor White
Write-Host "   ‚Ä¢ Redis: localhost:6379" -ForegroundColor White
Write-Host "   ‚Ä¢ MinIO: http://localhost:9001" -ForegroundColor White
Write-Host ""
Write-Host "‚ö†Ô∏è  IMPORTANTE: Execute os comandos abaixo em terminais separados:" -ForegroundColor Yellow
Write-Host ""
Write-Host "üì± Terminal 1 - Backend:" -ForegroundColor Green
Write-Host "   cd backend" -ForegroundColor White
Write-Host "   venv\Scripts\activate" -ForegroundColor White
Write-Host "   python -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000" -ForegroundColor White
Write-Host ""
Write-Host "üíª Terminal 2 - Frontend:" -ForegroundColor Green
Write-Host "   cd frontend" -ForegroundColor White
Write-Host "   npm run dev" -ForegroundColor White
Write-Host ""
Write-Host "Pressione qualquer tecla para continuar..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")